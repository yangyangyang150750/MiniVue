{
  "version": 3,
  "sources": ["../src/parser.ts", "../src/runtimeHelper.ts", "../src/index.ts"],
  "sourcesContent": ["import { NodeTypes } from \"./ast\"\r\n\r\n\r\n// \u6839\u636E\u6A21\u677F \u751F\u6210\u4E0A\u4E0B\u6587\r\nconst createParseContent=(content)=>{\r\n    return {\r\n        // \u539F\u59CB\u6570\u636E\r\n        originalSource:content,    \r\n        // \u5F53\u524D\u89E3\u6790\u7684\u6570\u636E \uFF01\uFF01\u5B57\u7B26\u4E32\u4F1A\u4E0D\u505C\u51CF\u5C11(\u88AB\u622A\u53D6)\r\n        source:content,   \r\n        // \u521B\u5EFA\u4F4D\u7F6E\u4FE1\u606F\r\n        line:1,\r\n        column:1,\r\n        offset:0,\r\n    }\r\n}\r\n\r\nconst isEnd=(context)=>{\r\n    // \u82E5\u5F53\u524D\u662F\u95ED\u5408\u6807\u7B7E \u8FD4\u56DEtrue\r\n    // => \u505C\u6B62\u5FAA\u73AF\r\n    if (context.source.startsWith('</')) {\r\n        return true\r\n    }\r\n    return !context.source\r\n}\r\n\r\n// \u66F4\u65B0\u5F53\u524D\u5B57\u7B26\u4E32\r\nconst advanceBy=(context,endIndex)=>{\r\n    context.source = context.source.slice(endIndex)\r\n}\r\n\r\n// \u5904\u7406\u6587\u672C\u6570\u636E\u65B9\u6CD5\r\nconst parseTextData=(context,endIndex)=>{\r\n    // \u83B7\u53D6\u6587\u672C\u5185\u5BB9\r\n    // => \u622A\u53D60-endIndex\u7684\u6570\u636E\r\n    const content = context.source.slice(0,endIndex)\r\n    // \u66F4\u65B0\u5F53\u524D\u5B57\u7B26\u4E32\r\n    advanceBy(context,endIndex)\r\n\r\n    return content\r\n}\r\n\r\n//\u5904\u7406\u6587\u672C\u51FD\u6570\r\nconst parseText=(context)=>{\r\n    // \u9700\u8981\u627E\u79BB\u5F53\u524D\u6587\u672C\u6700\u8FD1\u7684 '<' or '{{'\r\n    // \u4F8B\u5982\uFF1A 'abc   <div>{{ a }}</div>'\r\n\r\n    // \u5B9A\u4E49token\r\n    const tokens =['<','{{']\r\n    // \u5148\u5047\u8BBE\u627E\u4E0D\u5230\r\n    let endIndex = context.source.length\r\n\r\n    // \u904D\u5386tokens\r\n    // \u67E5\u627E\u6700\u8FD1token\u7684\u7D22\u5F15\u4F4D\u7F6E\r\n    for (let i = 0; i < tokens.length; i++) {\r\n        // \u627E\u5F53\u524Dtoken\u5728\u5F53\u524D\u5B57\u7B26\u4E32\u4E2D\u7684\u7D22\u5F15\r\n        const index = context.source.indexOf(tokens[i],1)   // \u4ECE\u7D22\u5F151\u5F00\u59CB\u627E\r\n        // \u5224\u65AD\u4E0EendIndex\u7684\u5927\u5C0F\r\n        if (index!==-1&& index<endIndex) {\r\n            // \u66F4\u65B0endIndex\r\n            endIndex=index\r\n        }\r\n    }\r\n\r\n    // \u6B64\u65F6 0-endIndex-1 \u5C31\u662F\u6587\u672C\u6570\u636E\r\n    // \u8C03\u7528\u5904\u7406\u6587\u672C\u6570\u636E\u65B9\u6CD5\r\n    let content = parseTextData(context,endIndex)\r\n\r\n    return {\r\n        type:NodeTypes.TEXT,\r\n        content,\r\n    }\r\n}\r\n\r\n// \u5220\u9664\u7A7A\u683C\r\nconst advanceSpaces=(context)=>{\r\n    // \u5229\u7528\u6B63\u5219\u627E\u5230\u7A7A\u683C \r\n    let match = /^[ \\t\\r\\n]+/.exec(context.source)\r\n\r\n    // \u5220\u9664\u7A7A\u683C\r\n    if(match){\r\n        advanceBy(context,match[0].length)\r\n    }\r\n}\r\n\r\n// \u89E3\u6790\u5355\u4E2A\u5C5E\u6027\u503C\u65B9\u6CD5\r\n// '1' b='2'><div>\r\nfunction parseAttributeValue(context){\r\n    // \u83B7\u53D6\u5F53\u524D\u5B57\u7B26\u4E32\u7B2C\u4E00\u4E2A\u5B57\u7B26\r\n    let quote = context.source[0]\r\n\r\n    // \u5224\u65AD\u662F\u5426\u4E3A\u5F15\u53F7\r\n    let isQuoted = quote==='\"'|| quote===\"'\"\r\n\r\n    let content\r\n    if (isQuoted) {\r\n        // \u5982\u679C\u662F\u5F15\u53F7\r\n        // 1\u3001\u66F4\u65B0\u5B57\u7B26\u4E32 \u5220\u9664\u5F53\u524D\u5F15\u53F7\r\n        advanceBy(context,1)\r\n        // 2\u3001\u83B7\u53D6\u53E6\u4E00\u4E2A\u5F15\u53F7\u7684\u7D22\u5F15\r\n        const endIndex = context.source.indexOf(quote,1)\r\n        // 3\u3001\u4E24\u4E2A\u5F15\u53F7\u4E4B\u95F4\u7684\u5185\u5BB9\u4FBF\u662F\u5C5E\u6027\u503C\r\n        content = parseTextData(context,endIndex)\r\n        // 4\u3001\u5220\u9664\u672B\u5C3E\u7684\u5F15\u53F7\r\n        advanceBy(context,1)\r\n    }else{\r\n        content = context.source.match(/([^ \\t\\r\\n/>])+/)[0]; // \u53D6\u51FA\u5185\u5BB9\uFF0C\u5220\u9664\u7A7A\u683C\r\n        advanceBy(context, content.length);\r\n        advanceSpaces(context);\r\n    }\r\n\r\n    return content\r\n}\r\n\r\n// \u89E3\u6790\u5355\u4E2A\u5C5E\u6027\u65B9\u6CD5\r\n// a='1' b='2'><div>\r\nconst parseAttribute=(context)=>{\r\n    // \u83B7\u53D6\u6E38\u6807\r\n    let start = getCursor(context)\r\n\r\n    // \u5B9A\u4E49\u5C5E\u6027\u540D \u5C5E\u6027\u503C\r\n    let name\r\n    let value\r\n\r\n    // \u5229\u7528\u6B63\u5219 \u5339\u914D\u5C5E\u6027\u540D\r\n    let match =(/^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source) as any)\r\n    name = match[0]\r\n    // \u66F4\u65B0\u5B57\u7B26\u4E32 \u5220\u9664\u5C5E\u6027\u540D\r\n    advanceBy(context,match[0].length)\r\n\r\n    // \u5229\u7528\u6B63\u5219 \u5224\u65AD\u662F\u5426\u5B58\u5728\u7A7A\u683C\u4E0E=\r\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n        // \u5148\u6E05\u9664\u7A7A\u683C\r\n        advanceSpaces(context)\r\n        // \u518D\u6E05\u9664=\r\n        advanceBy(context,1)\r\n        // \u6700\u540E\u6E05\u9664\u7A7A\u683C\r\n        advanceSpaces(context)\r\n\r\n        // \u8C03\u7528\u89E3\u6790\u5C5E\u6027\u503C\u65B9\u6CD5\r\n        value = parseAttributeValue(context)\r\n    }\r\n\r\n    let loc = getSelection(context, start)\r\n    return {\r\n    type: NodeTypes.ATTRIBUTE,\r\n    name,\r\n    value: {\r\n      type: NodeTypes.TEXT,\r\n      content: value,\r\n      loc,\r\n    },\r\n    loc: getSelection(context, start),\r\n  };\r\n}\r\n\r\n// \u89E3\u6790\u5C5E\u6027\u65B9\u6CD5\r\nconst parseAttributes=(context)=>{\r\n    // \u5B58\u50A8\u5C5E\u6027\r\n    const props = [] as any\r\n\r\n    // \u5FAA\u73AF\r\n    while (context.source.length>0 && !context.source.startsWith('>')) {\r\n        // \u8C03\u7528\u89E3\u6790\u5C5E\u6027\u65B9\u6CD5 \u83B7\u53D6\u5C5E\u6027\r\n        // \u540C\u65F6\u52A0\u5165\u6570\u7EC4\u4E2D\r\n        props.push(parseAttribute(context))\r\n        // \u5220\u9664\u7A7A\u683C\r\n        advanceSpaces(context)\r\n    }\r\n\r\n    return props\r\n}\r\n\r\n// \u89E3\u6790\u6807\u7B7E\u65B9\u6CD5\r\nconst parseTag = (context)=>{\r\n\r\n    // \u83B7\u53D6\u6E38\u6807\r\n    let start = getCursor(context)\r\n\r\n    // \u5229\u7528\u6B63\u5219 \u627E\u5230\u7B2C\u4E00\u4E2A\u7ED3\u675F\u6807\u7B7E\r\n    // <div  >  </div> => [<div,div]\r\n    const match =(/^<\\/?([a-z][^ \\t\\r\\n/>]*)/.exec(context.source))as any\r\n    let tag = match[1] // div  \r\n    // \u66F4\u65B0\u5F53\u524D\u5B57\u7B26\u4E32\r\n    advanceBy(context,match[0].length) // <div  ></div> => >  </div>\r\n\r\n    // \u5220\u9664\u7A7A\u683C\r\n    advanceSpaces(context)      //    ></div> = ></div>\r\n    \r\n    // \u5904\u7406\u5C5E\u6027\r\n    // \u5220\u9664\u7A7A\u683C\u540E \u53EF\u80FD\u6709\u5C5E\u6027\r\n    // <div  a='1' b='2'><div>\r\n    // =>a='1' b='2'><div>\r\n    let props = parseAttributes(context)\r\n\r\n    // \u5224\u65AD\u662F\u5426\u4E3A\u81EA\u95ED\u5408\r\n    const isSelfClosing = context.source.startsWith('/>')\r\n\r\n    // \u66F4\u65B0\u5F53\u524D\u5B57\u7B26\u4E32 \r\n    // \u82E5\u662F\u81EA\u95ED\u5408 => '/>' \u6B64\u65F6\u9700\u8981\u5220\u9664\u4E24\u4E2A\u5B57\u7B26\r\n    // \u5426\u5219 => '>' \u6B64\u65F6\u9700\u8981\u5220\u9664\u4E00\u4E2A\u5B57\u7B26\r\n    advanceBy(context,isSelfClosing?2:1) // >  </div> =>   </div>\r\n\r\n    return {\r\n        type:NodeTypes.ELEMENT,\r\n        tag,\r\n        isSelfClosing,\r\n        loc:getSelection(context,start),    // \u5F00\u5934\u6807\u7B7E\u89E3\u6790\u7684\u4FE1\u606F\r\n        props,\r\n    }\r\n}\r\n\r\n//\u5904\u7406\u5143\u7D20\u51FD\u6570\r\nconst parseElement=(context)=>{\r\n\r\n    // 1\u3001\u5904\u7406\u6807\u7B7E\r\n    // \u8C03\u7528\u89E3\u6790\u6807\u7B7E\u65B9\u6CD5\r\n    // <div>\r\n    const ele = parseTag(context)\r\n\r\n    // 2\u3001\u5904\u7406\u5B69\u5B50\r\n    // \u9012\u5F52\u89E3\u6790\u513F\u5B50\u8282\u70B9,\u4F46\u662F\u89E3\u6790\u7684\u65F6\u5019\u5982\u679C\u662F\u7ED3\u5C3E\u6807\u7B7E\u9700\u8981\u8DF3\u8FC7\r\n    const children = parseChildren(context); \r\n\r\n    // 2\u3001\u5904\u7406\u5269\u4F59\u6807\u7B7E\r\n    // </div>\r\n    if (context.source.startsWith('</')) {  \r\n        // parseTag\u9636\u6BB5\u53EF\u80FD\u8FD8\u4F1A\u5269\u4F59 </div>\u6807\u7B7E\r\n        //   <div></div>\r\n        //=> </div>\r\n\r\n        // \u5220\u9664\u7ED3\u675F\u6807\u7B7E\r\n        parseTag(context)\r\n    }\r\n\r\n    // 3\u3001\u6DFB\u52A0\u5C5E\u6027 \r\n    (ele as any).children=children,\r\n    (ele as any).loc=getSelection(context,ele.loc.start)\r\n\r\n    return  ele\r\n}\r\n\r\n//  \u9012\u5F52\u89E3\u6790\u6A21\u677F\u5B69\u5B50\r\nconst parseChildren=(context)=>{\r\n    let nodes =[] as any\r\n    while(!isEnd(context)){\r\n        let node\r\n        // \u83B7\u53D6\u5F53\u524D\u89E3\u6790\u7684\u5B57\u7B26\u4E32\r\n        const c = (context.source as any)        \r\n\r\n        // \u5224\u65AD\r\n        if (c.startsWith('{{')) {    // {{}}\r\n            // {{}}\r\n            node='\u8868\u8FBE\u5F0F'\r\n        }else if(c[0]==='<'){\r\n            // <div>\r\n            // \u8C03\u7528\u5904\u7406\u5143\u7D20\u51FD\u6570\r\n            node=parseElement(context)\r\n        }else{\r\n            // \u6587\u672C\r\n            // abc  {{}} <div>\r\n            // \u8C03\u7528\u5904\u7406\u6587\u672C\u51FD\u6570\r\n            node = parseText(context)\r\n        }\r\n        // \u72B6\u6001\u673A\r\n        nodes.push(node)\r\n    }\r\n\r\n    \r\n    // \u6E05\u9664\u7A7A\u8282\u70B9\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        let node = nodes[i]\r\n       if (node.type===NodeTypes.TEXT) {\r\n            // \u82E5\u662F\u7A7A\u767D\u5B57\u7B26 => \u6E05\u7A7A\r\n            if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n                nodes[i]=null\r\n            }else{\r\n                // \u5426\u5219\uFF1A\r\n                // aa          bb        cc \r\n                // \u53BB\u9664\u591A\u4F59\u7A7A\u683C\r\n                node.content=node.content.replace(/[\\t\\r\\n\\f ]+/g,' ')\r\n            }\r\n       }\r\n    }\r\n\r\n    return nodes.filter((item)=>Boolean(item))\r\n}\r\n\r\n// \u521B\u5EFA\u6839\u65B9\u6CD5\r\nconst createRoot=(children)=>{\r\n    return{\r\n        type:NodeTypes.ROOT,\r\n        children:children,\r\n    }\r\n}\r\n\r\n// \u89E3\u6790\u6A21\u677F\u65B9\u6CD5\r\nexport function parse(template) {\r\n    // \u6839\u636Etemplate \u751F\u6210\u4E00\u68F5\u6811      line column offset\r\n    \r\n    // \u751F\u6210\u6A21\u677F\u4E0A\u4E0B\u6587\r\n    const context = createParseContent(template)\r\n\r\n    // \u9012\u5F52\u89E3\u6790\u6A21\u677F\u4E0A\u4E0B\u6587\r\n    // <p>\r\n    //     <div></div>\r\n    //     <div></div>\r\n    // </p>\r\n    // ====>\r\n    // {type:1,tag:'p',children:[...]}\r\n    // \u5148\u89E3\u6790\u5B69\u5B50 \u518D\u521B\u5EFA\u6839\u8282\u70B9\r\n    return createRoot(parseChildren(context))\r\n}\r\n\r\n\r\n\r\n/// \u83B7\u53D6\u6E38\u6807\u65B9\u6CD5\r\nfunction getCursor(context) {\r\n  let { line, column, offset } = context;\r\n  return { line, column, offset };\r\n}\r\n\r\n// \u83B7\u53D6\u4F4D\u7F6E\u4FE1\u606F\r\nfunction getSelection(context, start, e?) {\r\n  let end = e || getCursor(context);\r\n  // eslint \u53EF\u4EE5\u6839\u636E start\uFF0Cend\u627E\u5230\u8981\u62A5\u9519\u7684\u4F4D\u7F6E\r\n  return {\r\n    start,\r\n    end,\r\n    source: context.originalSource.slice(start.offset, end.offset),\r\n  };\r\n}", "\r\n\r\n// \u5B9A\u4E49\u5B8F\r\nexport const TO_DISPLAY_STRING = Symbol(\"TO_DISPLAY_STRING\");\r\n\r\nexport const helperNameMap = {\r\n  [TO_DISPLAY_STRING]: \"toDisplayString\",\r\n};", "\r\n// \u7F16\u8BD1\u4E3B\u8981\u5206\u4E3A\u4E09\u6B65\r\n// 1\u3001\u5C06\u6A21\u677F => AST\u8BED\u6CD5\u6811\r\n// 2\u3001\u5C06AST\u8BED\u6CD5\u6811 => codegennode\r\n// 3\u3001\u5C06codegennode => render\u51FD\u6570\r\n\r\nimport { parse } from \"./parser\";\r\nimport { NodeTypes } from \"./ast\";\r\nimport { TO_DISPLAY_STRING } from './runtimeHelper'\r\n\r\n// 2\u3001\u5C06AST\u8BED\u6CD5\u6811 => codegennode\r\n\r\n// \u8F6C\u6362\u4E0D\u540C\u7C7B\u578Bdom\u7684\u65B9\u6CD5\r\n// dom\u904D\u5386\u65B9\u5F0F \u540E\u5E8F\u4EE5\u53CA\u5148\u5E8F\r\n// \u8F6C\u6362\u5143\u7D20\u65B9\u6CD5\r\nfunction transformElement(node,context) {\r\n    if (node.type===NodeTypes.ELEMENT) {\r\n        console.log('\u8F6C\u6362\u5143\u7D20\u65B9\u6CD5');\r\n    }\r\n    return function () {\r\n        \r\n    }\r\n}\r\n\r\n// \u5224\u65AD\u8282\u70B9\u662F\u5426\u4E3A\u6587\u672C\r\nfunction isText(node){\r\n    return node.type===NodeTypes.TEXT || node.type===NodeTypes.INTERPOLATION\r\n}\r\n\r\n// \u8F6C\u6362\u6587\u672C\u65B9\u6CD5\r\nfunction transformText(node,context) {\r\n    if (node.type===NodeTypes.ELEMENT || node.type===NodeTypes.ROOT) {\r\n       \r\n       // \u6CE8\u610F\u5904\u7406\u987A\u5E8F\uFF1A\r\n       // \u9700\u8981\u7B49\u5F85\u6240\u6709\u5B50\u8282\u70B9\u5904\u7406\u5B8C\u6210\u540E \u518D\u8D4B\u503C\u7ED9\u7236\u5143\u7D20\r\n        return function () {\r\n            // \u83B7\u53D6\u5B69\u5B50\r\n            let children = node.children\r\n            // \u5B9A\u4E49\u5BB9\u5668 \u7528\u4E8E\u5408\u5E76\u8282\u70B9\r\n            let container = null\r\n            // \u6587\u672C\u6807\u8BB0\r\n            let hasText = false\r\n\r\n            // \u904D\u5386\u5B69\u5B50\r\n            for (let i = 0; i < children.length; i++) {\r\n                // \u83B7\u53D6\u5B69\u5B50\u8282\u70B9\r\n                let child = children[i]\r\n\r\n                // \u5224\u65AD\u5F53\u524D\u5B69\u5B50\u8282\u70B9\u662F\u5426\u4E3A\u6587\u672C\u7C7B\u578B\r\n                if (isText(child)) {\r\n                    // \u82E5\u662F\r\n                    // \u66F4\u65B0\u6807\u8BB0\r\n                    hasText=true\r\n                    // \u904D\u5386\u4E0B\u4E00\u8282\u70B9\r\n                    for (let j = i+1; j < children.length; j++){\r\n                        // \u5224\u65AD\u4E0B\u4E00\u8282\u70B9\u662F\u5426\u4E3A\u6587\u672C\u7C7B\u578B\r\n                        // \u4ECE\u800C\u5B9E\u73B0\u5408\u5E76\r\n\r\n                        // \u83B7\u53D6\u4E0B\u4E00\u8282\u70B9\r\n                        const next =children[j]\r\n\r\n                        // \u5224\u65AD\u4E0B\u4E00\u8282\u70B9\u662F\u5426\u4E3A\u6587\u672C\u7C7B\u578B\r\n                        if (isText(next)) {\r\n                            // \u82E5\u662F\r\n                            // \u5224\u65AD\u5F53\u524D\u5BB9\u5668\u662F\u5426\u521D\u59CB\u5316\r\n                            if (!container) {\r\n                                // \u521D\u59CB\u5316\u5BB9\u5668\r\n                                container=children[i]={\r\n                                    type:NodeTypes.COMPOUND_EXPRESSION,\r\n                                    children:[child]\r\n                                }\r\n                            }\r\n\r\n                            // \u5408\u5E76\u5F53\u524D\u8282\u70B9\r\n                            container.children.push('+',next)           \r\n                            // \u66F4\u65B0\u5B69\u5B50\u6570\u7EC4 \u5220\u9664\u5F53\u524D\u8282\u70B9\r\n                            children.splice(j,1)\r\n                            // \u66F4\u65B0\u6307\u9488\r\n                            j--\r\n                        }else{\r\n                            // \u6E05\u7A7A\u5BB9\u5668\r\n                            container=null \r\n                            // \u9000\u51FA\u5FAA\u73AF\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // \u9700\u8981\u5224\u65AD\u5F53\u524D\u662F\u5426\u53EA\u6709\u4E00\u4E2A\u6587\u672C\u5B69\u5B50\r\n            if (!hasText || children.length===1) {\r\n                \r\n            }\r\n        }\r\n    }\r\n    \r\n}\r\n// \u8F6C\u6362\u8868\u8FBE\u5F0F\u65B9\u6CD5\r\nfunction transformExpress(node,context) {\r\n    if (node.type===NodeTypes.INTERPOLATION) {\r\n        debugger\r\n        node.content.content = `_ctx.${node.content.content}`\r\n    }\r\n}\r\n\r\n// \u521B\u5EFA\u8F6C\u6362\u4E0A\u4E0B\u6587\u65B9\u6CD5\r\nfunction createTransformContext(root) {\r\n    // \u8F6C\u6362\u4E0A\u4E0B\u6587\r\n    const context= {\r\n        // \u8BB0\u5F55\u5F53\u524D\u8282\u70B9\r\n        currentNode:root,\r\n        // \u8BB0\u5F55\u7236\u8282\u70B9\r\n        parent:null,\r\n        // \u4FDD\u5B58\u8F6C\u6362\u65B9\u6CD5\r\n        transformNode:[transformElement,transformText,transformExpress],\r\n        // \u8BB0\u5F55\u65B9\u6CD5\u4F7F\u7528\u6B21\u6570 \u65B9\u4FBF\u63D0\u5347hoist\r\n        helpers:new Map(),\r\n        // \u8BB0\u5F55\u65B9\u6CD5\r\n        helper(name){\r\n            // \u83B7\u53D6\u5F53\u524D\u65B9\u6CD5 \u6267\u884C\u6B21\u6570\r\n            let count = context.helpers.get(name)\r\n            // \u66F4\u65B0\u6267\u884C\u6B21\u6570\r\n            context.helpers.set(name,count+1)\r\n            return name\r\n        }\r\n    }\r\n    return context\r\n}\r\n\r\n// \u904D\u5386\u8282\u70B9\u65B9\u6CD5\r\nfunction traverseNode(node,context){\r\n    // 1\u3001\u4E0A\u4E0B\u6587\u66F4\u65B0\u5F53\u524D\u8282\u70B9\r\n    context.currentNode = node\r\n    // 2\u3001\u89E3\u6784\u51FA\u904D\u5386\u65B9\u6CD5\r\n    const transforms = context.transformNode\r\n\r\n    \r\n\r\n    // 3\u3001\u904D\u5386\u8F6C\u6362\u65B9\u6CD5\r\n    // \u5B58\u50A8\u8FD4\u56DE\u51FD\u6570\r\n    const exits =[] //// \u5143\u7D20\u51FD\u6570\uFF0C\u6587\u672C\u51FD\u6570\uFF0C\u8868\u8FBE\u5F0F\u7684\u51FD\u6570\r\n    for (let i = 0; i < transforms.length; i++) {\r\n        // \u6267\u884C\u8F6C\u6362\u65B9\u6CD5\r\n        let exit=transform[i](node,context)\r\n        // \u5B58\u50A8\u8FD4\u56DE\u51FD\u6570\r\n        exit && exits.push(exit)\r\n    }\r\n\r\n    // 4\u3001\u9012\u5F52\u5904\u7406\r\n    switch (node.type) {\r\n        case NodeTypes.ROOT:\r\n        case NodeTypes.ELEMENT:\r\n            // \u9012\u5F52\u904D\u5386\u5B69\u5B50\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                // 1\u3001\u4E0A\u4E0B\u6587\u66F4\u65B0\u7236\u8282\u70B9\r\n                context.parent = node\r\n                // 2\u3001\u904D\u5386\u5B69\u5B50\u8282\u70B9\r\n                traverseNode(node.children[i],context)\r\n            }\r\n            break\r\n        // \u5BF9\u8868\u8FBE\u5F0F\u7684\u5904\u7406\r\n        case NodeTypes.INTERPOLATION:\r\n            // \u8C03\u7528tostring\u65B9\u6CD5\r\n            context.helper(TO_DISPLAY_STRING)\r\n            break\r\n\r\n    }\r\n\r\n    // 5\u3001\u6267\u884C\u8FD4\u56DE\u51FD\u6570\r\n    context.currentNode = node; // \u56E0\u4E3AtraverseNode \u4F1A\u5C06node\u53D8\u6210\u5B50\u8282\u70B9\r\n    let i = exits.length;\r\n    if (i > 0) {\r\n      while (i--) {\r\n        exits[i]();\r\n      }\r\n    }\r\n}\r\n\r\n// \u5B9A\u4E49\u8F6C\u6362\u65B9\u6CD5\r\nfunction transform(AST) {\r\n    // 1\u3001\u521B\u5EFA\u8F6C\u6362\u65F6\u7684\u4E0A\u4E0B\u6587\r\n    // \u6839\u636E\u751F\u6210\u7684ast\u6570 \u521B\u5EFA\u4E0A\u4E0B\u6587\r\n    const context = createTransformContext(AST)\r\n\r\n    // 2\u3001\u904D\u5386AST\u8BED\u6CD5\u6811\r\n    traverseNode(AST,context)\r\n\r\n    // \r\n    AST.helper=[...context.helpers.keys()]\r\n}\r\n\r\n// \u5B9A\u4E49\u7F16\u8BD1\u65B9\u6CD5\r\nexport function compile(template) {\r\n    // 1\u3001\u5C06\u6A21\u677F => AST\u8BED\u6CD5\u6811\r\n    const AST = parse(template)\r\n\r\n    // 2\u3001\u5C06AST\u8BED\u6CD5\u6811 => codegennode\r\n    transform(AST)\r\n}\r\n\r\nexport{parse}\r\n\r\n"],
  "mappings": "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",
  "names": ["i"]
}
